{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GitGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","console","log","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GitGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GitExpertApp","ReactDOM","render","document","getElementById"],"mappings":"uKAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACM,uBAAMC,SAVQ,SAACC,GACfA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IACzBR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKpB,UACM,6BAAKD,IACL,uBACMQ,KAAK,OACLC,MAAOT,EACPU,SAnBQ,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,c,+BCPtBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACXC,EADW,iDACqCC,UAChDH,GAFW,+DAKEI,MAAMF,GALR,cAKXG,EALW,gBAMMA,EAAKC,OANX,uBAMTC,EANS,EAMTA,KAERC,QAAQC,IAAIF,GACNG,EAAOH,EAAKI,KAAI,SAACC,GAAS,IAAD,EACzB,MAAO,CACDC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAG,UAAEU,EAAIG,cAAN,aAAE,EAAYC,iBAAiBd,QAb7B,kBAiBVQ,GAjBU,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOZ,EAAU,EAAVA,IAC/B,OACM,sBAAKgB,UAAU,2CAAf,UACM,qBAAKC,IAAKjB,EAAKkB,IAAKN,IACpB,uBACA,4BAAIA,QCHTO,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACVd,mBAAS,CAC7BqB,KAAM,GACNe,SAAS,IAHqB,mBAC7BC,EAD6B,KACtBC,EADsB,KAiBpC,OAXAC,qBAAU,WACJ1B,EAAQC,GAAU0B,MAAK,SAACC,GAClBC,YAAW,WACLJ,EAAS,CACHjB,KAAMoB,EACNL,SAAS,MAElB,UAEZ,CAACtB,IAEGuB,EDf2BM,CAAa7B,GAAjCe,EADqB,EAC3BR,KAAce,EADa,EACbA,QACtB,OACM,qCACM,oBAAIJ,UAAU,oCAAd,SACOlB,IAGNsB,GACK,mBAAGJ,UAAU,mCAAb,wBAKN,qBAAKA,UAAU,8CAAf,SACOH,EAAOJ,KAAI,SAACC,GACP,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEc5CiB,EA9BM,WAAM,MAGe5C,mBAAS,CAAC,uBAHzB,mBAGdQ,EAHc,KAGFT,EAHE,KAWrB,OACM,qCACM,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACOS,EAAWiB,KAAI,SAACX,GACX,OACM,cAAC,EAAD,CAEMA,SAAUA,GADLA,Y,MCpB/C+B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.7f8c6996.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n      const [inputValue, setInputValue] = useState('');\n\n      const handleInputChange = (e) => {\n            setInputValue(e.target.value);\n      };\n\n      const handleSumit = (e) => {\n            e.preventDefault();\n\n            if (inputValue.trim().length > 0) {\n                  setCategories((categories) => [inputValue, ...categories]);\n                  setInputValue('');\n            }\n      };\n\n      return (\n            <form onSubmit={handleSumit}>\n                  <h1>{inputValue}</h1>\n                  <input\n                        type=\"text\"\n                        value={inputValue}\n                        onChange={handleInputChange}\n                  />\n            </form>\n      );\n};\n\nAddCategory.propTypes = {\n      setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n      const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n            category\n      )}&limit=10&api_key=Apg9qmIfeSgdQEba4nRpwg2Vlef8LnnA`;\n\n      const resp = await fetch(url);\n      const { data } = await resp.json();\n\n      console.log(data);\n      const gifs = data.map((img) => {\n            return {\n                  id: img.id,\n                  title: img.title,\n                  url: img.images?.downsized_medium.url,\n            };\n      });\n\n      return gifs;\n};\n","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n      return (\n            <div className=\"card animate__bounceIn animate__delay-2s\">\n                  <img src={url} alt={title} />\n                  <hr />\n                  <p>{title}</p>\n            </div>\n      );\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GitGrid = ({ category }) => {\n      const { data: images, loading } = useFetchGifs(category);\n      return (\n            <>\n                  <h3 className=\"animate__bounceIn animate__slower\">\n                        {category}\n                  </h3>\n\n                  {loading && (\n                        <p className=\"animate__animated animate__flash\">\n                              Loading...\n                        </p>\n                  )}\n\n                  <div className=\"card-grid animate__bounceIn animate__slower\">\n                        {images.map((img) => {\n                              return <GifGridItem key={img.id} {...img} />;\n                        })}\n                  </div>\n            </>\n      );\n};\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n      const [state, setstate] = useState({\n            data: [],\n            loading: true,\n      });\n\n      useEffect(() => {\n            getGifs(category).then((imgs) => {\n                  setTimeout(() => {\n                        setstate({\n                              data: imgs,\n                              loading: false,\n                        });\n                  }, 2000);\n            });\n      }, [category]);\n\n      return state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GitGrid } from './components/GitGrid';\n\nconst GitExpertApp = () => {\n      //const categories = ['One Punch','Samurai X','Dragon Ball','shingeki no kyojin' ];\n\n      const [categories, setCategories] = useState(['Shingeki no Kyojin']);\n\n      /* const handleAdd = () => {\n            // setCategories([...categories, 'Naruto']);\n            setCategories((cats) => [...cats, 'Naruto']);\n      }; */\n\n      //\n      return (\n            <>\n                  <h2>GitExpertApp</h2>\n                  <AddCategory setCategories={setCategories} />\n                  <hr />\n\n                  <ol>\n                        {categories.map((category) => {\n                              return (\n                                    <GitGrid\n                                          key={category}\n                                          category={category}\n                                    />\n                              );\n                        })}\n                  </ol>\n            </>\n      );\n};\nexport default GitExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GitExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}